name: Smoke

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
      PYTHONIOENCODING: utf-8
      PIP_DOWNLOAD_CACHE: ${{ github.workspace }}/../.pip_download_cache
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-2019]
        python-version: [3.7, 3.9]
    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Add python requirements
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox

    - name: Install and setup MSYS2 mingw
      if: runner.os == 'Windows'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: "mingw-w64-x86_64-toolchain
                  mingw-w64-x86_64-libiconv
                  mingw-w64-x86_64-cmake
                  mingw-w64-x86_64-extra-cmake-modules
                  mingw-w64-x86_64-ninja"

    - name: Run tests (tox)
      if: runner.os != 'Windows'
      run: |
        tox -e ctest
        cat config.h

    - name: Run tests (ctest)
      if: runner.os == 'Windows'
      shell: msys2 {0}
      run: >
        ctest
        --build-config Release
        --build-generator 'MSYS Makefiles'
        --build-and-test . build
        --build-options -DCMAKE_INSTALL_PREFIX:PATH=$env:CONDA_PREFIX
        --test-command ctest -V
        --build-config Release
        && cat config.h

    #- name: Upload artifacts
      #uses: actions/upload-artifact@v2
      #with:
        #name: coverage-report
        #path: ./cover
