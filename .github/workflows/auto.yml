# CI with autotools fun
name: Autotools

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
      PYTHONIOENCODING: utf-8
      PIP_DOWNLOAD_CACHE: ${{ github.workspace }}/../.pip_download_cache
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macOS-11, windows-2019]
        python-version: [3.7, 3.9]

    steps:
    - name: git config
      run: git config --global core.autocrlf input
      shell: bash

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install macos deps
      if: runner.os == 'macOS'
      shell: bash
      run: |
        brew install autoconf automake pkg-config autoconf-archive

    - name: Install linux deps
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y autoconf autoconf-archive automake make libtool
        sudo apt-get install -y software-properties-common
        sudo add-apt-repository -y -s ppa:nerdboy/embedded
        sudo apt-get install -y --only-upgrade autoconf

    - name: Install and setup MSYS2
      if: runner.os == 'Windows'
      uses: msys2/setup-msys2@v2.4.2
      with:
        msystem: MINGW64
        update: true
        install: >
          git
          base-devel
          tree
          make
          libtool
          autoconf
          autoconf-archive
          automake-wrapper
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-libiconv

    - name: Add python requirements
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox

    - name: Run tests
      if: runner.os != 'Windows'
      shell: bash
      run: |
        tox -e auto
        cat config.h

    - name: Build and test
      if: runner.os == 'Windows'
      shell: msys2 {0}
      run: |
        autoreconf -fiv
        ./configure --disable-doxygen-doc
        cat config.h
        make
        ./tools/trietool.exe -V
      env:
        datrie_cv_have_version_script: no

    #- name: Upload artifacts
      #uses: actions/upload-artifact@v2
      #with:
        #name: coverage-report
        #path: ./cover
